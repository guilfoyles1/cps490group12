doctype html
html
  head
    title Chat Room
    script(src="/socket.io/socket.io.js")
  body
    h1 Welcome to the Chat Room, #{username}!

    // Group chat area
    h2 Group Chat
    input#groupRoomName(type="text" placeholder="Enter group room name")
    button#joinGroupRoom Join Group Room
    ul#groupMessages
    input#groupMessageInput(type="text" placeholder="Enter group message")
    button#sendGroupMessage Send Group Message

    // Direct message area
    h2 Direct Message
    input#recipientUsername(type="text" placeholder="Recipient username")
    input#directMessageInput(type="text" placeholder="Enter direct message")
    button#sendDirectMessage Send Direct Message

    script.
      const socket = io();

      // Join the chat with the username
      socket.emit('join', '#{username}');

      // Join a group room
      document.getElementById('joinGroupRoom').addEventListener('click', () => {
        const room = document.getElementById('groupRoomName').value;
        if (room.trim() !== '') {
          socket.emit('join room', room);
          console.log(`Joined room: ${room}`);
        }
      });

      // Send group message
      document.getElementById('sendGroupMessage').addEventListener('click', () => {
        const room = document.getElementById('groupRoomName').value;
        const message = document.getElementById('groupMessageInput').value;
        if (room.trim() !== '' && message.trim() !== '') {
          socket.emit('group message', { room, message });
          document.getElementById('groupMessageInput').value = '';
        }
      });

      // Send direct message
      document.getElementById('sendDirectMessage').addEventListener('click', () => {
        const recipient = document.getElementById('recipientUsername').value;
        const message = document.getElementById('directMessageInput').value;
        if (recipient.trim() !== '' && message.trim() !== '') {
          socket.emit('direct message', { recipient, message });
          document.getElementById('directMessageInput').value = '';
        }
      });

      // Listen for incoming group messages
      socket.on('group message', (data) => {
        const groupMessagesUl = document.getElementById('groupMessages');
        const newMessageLi = document.createElement('li');
        newMessageLi.textContent = `${data.sender}: ${data.message}`;
        groupMessagesUl.appendChild(newMessageLi);
      });

      // Listen for incoming direct messages
      socket.on('direct message', (data) => {
        alert(`New message from ${data.sender}: ${data.message}`);
      });
